server:
  port: 8761


spring:
  main:
    web-application-type: reactive
  cloud:
    gateway:
      default-filters:
        - name: Retry
          args:
            retries: 15
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
        - name: TokenRelay
      discovery:
        locator:
          enabled: true
          lowerCaseServiceId: true

  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${OAUTH2_ISSUER_URI:http://localhost:8180}/realms/${OAUTH2_REALM:var-realm}
        registration:
          keycloak:
            provider: keycloak
            clientId: ${OAUTH2_CLIENT_ID}
            clientSecret: ${OAUTH2_CLIENT_SECRET}
            scope:
              - openid
  endpoints:
    gateway:
      enabled: true
    web:
      exposure:
        include: '*'

logging:
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

info:
  system: Polar Bookshop

management:
  endpoints:
    web:
      exposure:
        include: configprops, env, health, heapdump, info, loggers, mappings, prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
  info:
    env:
      enabled: true
    java:
      enabled: true
    os:
      enabled: true
  tracing:
    sampling:
      probability: 1.0
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
    tags:
      application: ${spring.application.name}